"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[6925],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var n=t(7294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var a=n.createContext({}),c=function(e){var r=n.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(a.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,i=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=s,v=d["".concat(a,".").concat(m)]||d[m]||p[m]||i;return t?n.createElement(v,o(o({ref:r},u),{},{components:t})):n.createElement(v,o({ref:r},u))}));function m(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var a in r)hasOwnProperty.call(r,a)&&(l[a]=r[a]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4041:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=t(7462),s=(t(7294),t(3905));const i={},o="supervisor & systemctl service",l={unversionedId:"supervisor",id:"supervisor",title:"supervisor & systemctl service",description:"supervisor",source:"@site/notes/linux/supervisor.md",sourceDirName:".",slug:"/supervisor",permalink:"/notes/linux/supervisor",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"samba(old)",permalink:"/notes/linux/samba"},next:{title:"ubuntu(old)",permalink:"/notes/linux/ubuntu"}},a={},c=[{value:"supervisor",id:"supervisor",level:2},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:3},{value:"\u914d\u7f6e: \u540e\u7f00\u4e3a conf \u6216 ini",id:"\u914d\u7f6e-\u540e\u7f00\u4e3a-conf-\u6216-ini",level:3},{value:"systemctl service",id:"systemctl-service",level:2},{value:"glider example",id:"glider-example",level:3}],u={toc:c};function p(e){let{components:r,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"supervisor--systemctl-service"},"supervisor & systemctl service"),(0,s.kt)("h2",{id:"supervisor"},"supervisor"),(0,s.kt)("h3",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"yay --noconfirm -S supervisor\n\n# or install with pip\n\npip install supervisor\nsudo ~/.venv/py3/bin/echo_supervisord_conf > /etc/supervisord.conf\n# config /etc/supervisord.conf\nsupervisord\n")),(0,s.kt)("h3",{id:"\u914d\u7f6e-\u540e\u7f00\u4e3a-conf-\u6216-ini"},"\u914d\u7f6e: \u540e\u7f00\u4e3a conf \u6216 ini"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"[program:frp_ssh]\n\ncommand     = /home/user/frp/frpc -c /home/user/frp/config.ini\ndirectory = /home/user/somedir\nuser = user\nautostart = true\nautorestart = true\nstartsecs   = 3\n\nredirect_stderr         = true\nstdout_logfile_maxbytes = 50MB\nstdout_logfile_backups  = 10\nstdout_logfile          = /home/user/frp/log\n")),(0,s.kt)("h2",{id:"systemctl-service"},"systemctl service"),(0,s.kt)("h3",{id:"glider-example"},"glider example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Glider\nDocumentation=glider --help\nAfter=network.target\nStartLimitIntervalSec=30\nStartLimitBurst=2\n\n[Service]\nExecStart=/usr/bin/glider -config /etc/glider/glider.conf\nRestart=always\nRestartSec=1\n# User=someuser\n\n[Install]\nAlias=glider.service\nWantedBy=multi-user.target\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"sudo ln -s glider.service /etc/systemd/system/glider.service\nsudo systemctl restart glider.service\n")))}p.isMDXComponent=!0}}]);