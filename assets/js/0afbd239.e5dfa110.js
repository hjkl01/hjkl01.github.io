"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[9641],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5466:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const i={},a="shiori \u4e66\u7b7e\u7ba1\u7406\u5668",s={unversionedId:"shiori",id:"shiori",title:"shiori \u4e66\u7b7e\u7ba1\u7406\u5668",description:"\u539f\u94fe\u63a5",source:"@site/notes/docker/shiori.md",sourceDirName:".",slug:"/shiori",permalink:"/notes/docker/shiori",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"samba nfs",permalink:"/notes/docker/samba"},next:{title:"wxedge",permalink:"/notes/docker/wxedge"}},c={},p=[{value:"\u539f\u94fe\u63a5",id:"\u539f\u94fe\u63a5",level:2}],l={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"shiori-\u4e66\u7b7e\u7ba1\u7406\u5668"},"shiori \u4e66\u7b7e\u7ba1\u7406\u5668"),(0,o.kt)("h2",{id:"\u539f\u94fe\u63a5"},"\u539f\u94fe\u63a5"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/go-shiori/shiori/"},"https://github.com/go-shiori/shiori/"))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"loginuser: shiori"),(0,o.kt)("p",{parentName:"admonition"},"passwd: gopher")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "2.1"\nservices:\n  shiori:\n    image: nicholaswilde/shiori:latest\n    container_name: shiori-default\n    environment:\n      TZ: Asia/Shanghai\n      PUID: 1000\n      PGID: 1000\n      SHIORI_PG_HOST: db\n      SHIORI_PG_PORT: 5432\n      SHIORI_PG_USER: user\n      SHIORI_PG_PASS: password\n      SHIORI_PG_NAME: ""\n    ports:\n      - 8080:8080\n    restart: unless-stopped\n    volumes:\n      - ./data/shiori:/data\n    depends_on:\n      - db\n  db:\n    image: postgres\n    restart: always\n    environment:\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n    volumes:\n      - ./data/shiori_postgres:/var/lib/postgresql/data\n\nnetworks:\n  default:\n    external:\n      name: nginx-proxy\n')))}u.isMDXComponent=!0}}]);