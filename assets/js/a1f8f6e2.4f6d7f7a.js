"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[9755],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),h=c(n),g=s,d=h["".concat(l,".").concat(g)]||h[g]||u[g]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,i=new Array(o);i[0]=h;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:s,i[1]=a;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},65609:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(83117),s=(n(67294),n(3905));const o={sidebar_position:1},i="git ssh",a={unversionedId:"ssh_git",id:"ssh_git",title:"git ssh",description:"git",source:"@site/notes/linux/ssh_git.md",sourceDirName:".",slug:"/ssh_git",permalink:"/notes/linux/ssh_git",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"nginx",permalink:"/notes/linux/nginx"},next:{title:"arch",permalink:"/notes/linux/arch"}},l={},c=[{value:"git",id:"git",level:3},{value:"~/.gitconfig",id:"gitconfig",level:4},{value:"ssh",id:"ssh",level:3},{value:"ssh TOTP \u5f00\u542f\u4e8c\u6b21\u9a8c\u8bc1",id:"ssh-totp-\u5f00\u542f\u4e8c\u6b21\u9a8c\u8bc1",level:3},{value:"\u661f\u56fe",id:"\u661f\u56fe",level:3},{value:"\u5728markdown\u4e2d\u7684\u4ee3\u7801:",id:"\u5728markdown\u4e2d\u7684\u4ee3\u7801",level:4},{value:"example:",id:"example",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"git-ssh"},"git ssh"),(0,s.kt)("h3",{id:"git"},"git"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'# generate public key\ngit config --global user.name ""\ngit config --global user.email ""\nssh-keygen -t rsa -b 4096 -C ""\n\n# git config\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:7890\ngit config --global https.https://github.com.proxy socks5://127.0.0.1:7890\n\n# git submodule\ngit submodule add https://github.com/liuyib/hexo-theme-stun/ themes/stun\ngit submodule update --remote\n')),(0,s.kt)("h4",{id:"gitconfig"},"~/.gitconfig"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'# ~/.gitconfig\n[http "https://github.com"]\n    postBuffer = 524288000\n    proxy = socks5://127.0.0.1:1080\n[https "https://github.com"]\n    postBuffer = 524288000\n    proxy = socks5://127.0.0.1:1080\n\n[pull]\n    rebase = false\n[user]\n    email = \n    name = \n[filter "lfs"]\n    clean = git-lfs clean -- %f\n    smudge = git-lfs smudge -- %f\n    process = git-lfs filter-process\n    required = true\n[init]\n    defaultBranch = master\n\n; [url "https://ghproxy.com/https://github.com/"]\n;   insteadOf = https://github.com\n\n; [url "https://gitclone.com/github.com/"]\n;   insteadOf = https://github.com\n')),(0,s.kt)("h3",{id:"ssh"},"ssh"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# $HOME/.ssh/config\nHost github\n   HostName github.com\n   User git\n   # \u8d70 HTTP \u4ee3\u7406\n   # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=8080\n   # \u8d70 socks5 \u4ee3\u7406\n   ProxyCommand nc -v -x 127.0.0.1:7890 %h %p\n\n\nHost archServer\n    HostName 192.168.xx.xx\n    User xxx\n    Port xxx\n    # use ipv4\n    # AddressFamily inet\n    IdentitiesOnly yes\n    IdentityFile ~/.ssh/id_rsa\n    ServerAliveInterval 120\n    \n# \u8f6c\u53d1\u8df3\u677f\u673a\u7aef\u53e3\nssh -tt -i ./id_rsa -L 0.0.0.0:local_port:host2:host2_port user@host1\n\n# \u4e0a\u4f20\u5171\u94a5\u5230\u76ee\u6807\u670d\u52a1\u5668\nssh-copy-id -i ~/.ssh/id_rsa.pub archServer\n\n# \u8f6c\u53d1\u670d\u52a1\u5668\u5230\u672c\u673a\u76841082\u7aef\u53e3\nssh -D 1082 -f -C -q -N archServer\n")),(0,s.kt)("h3",{id:"ssh-totp-\u5f00\u542f\u4e8c\u6b21\u9a8c\u8bc1"},"ssh TOTP \u5f00\u542f\u4e8c\u6b21\u9a8c\u8bc1"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"# ubuntu \nsudo apt install -y libpam-google-authenticator\n\n# arch \nyay -S --noconfirm google-authenticator-libpam-git\n\n# \u751f\u6210\u9a8c\u8bc1\u7801  \n# \u54ea\u4e2a\u8d26\u53f7\u9700\u8981\u52a8\u6001\u9a8c\u8bc1\u7801\uff0c\u8bf7\u5207\u6362\u5230\u8be5\u8d26\u53f7\u4e0b\u64cd\u4f5c  \n# -t: \u4f7f\u7528 TOTP \u9a8c\u8bc1  \n# -f: \u5c06\u914d\u7f6e\u4fdd\u5b58\u5230 ~/.google_authenticator \u6587\u4ef6\u91cc\u9762  \n# -d: \u4e0d\u5141\u8bb8\u91cd\u590d\u4f7f\u7528\u4ee5\u524d\u4f7f\u7528\u7684\u4ee4\u724c  \n# -w 3: \u4f7f\u7528\u4ee4\u724c\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u4ee5\u8fdb\u884c\u65f6\u949f\u504f\u79fb  \n# -e 10: \u751f\u6210 10 \u4e2a\u7d27\u6025\u5907\u7528\u4ee3\u7801  \n# -r 3 -R 30: \u9650\u901f - \u6bcf 30 \u79d2\u5141\u8bb8 3 \u6b21\u767b\u5f55  \ngoogle-authenticator -t -f -d -w 3 -e 10 -r 3 -R 30\n\n# chrome \u63d2\u4ef6 https://chrome.google.com/webstore/detail/authenticator/bhghoamapcdpbohphigoooaddinpkbai\n# android app Google Authenticator https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en_US&gl=US\n\nsudo vim /etc/pam.d/sshd  \n\nauth required pam_google_authenticator.so\n\nsudo nvim /etc/ssh/sshd_config \n\nKbdInteractiveAuthentication yes\nChallengeResponseAuthentication yes  \nPubkeyAuthentication yes  \nPasswordAuthentication yes  \nAuthenticationMethods publickey,password publickey,keyboard-interactive\n\nsudo systemctl restart ssh.service\n")),(0,s.kt)("h3",{id:"\u661f\u56fe"},"\u661f\u56fe"),(0,s.kt)("h4",{id:"\u5728markdown\u4e2d\u7684\u4ee3\u7801"},"\u5728markdown\u4e2d\u7684\u4ee3\u7801:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"![stars](https://starchart.cc/lesssound/pornhub.svg)\n")),(0,s.kt)("h4",{id:"example"},"example:"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://starchart.cc/lesssound/pornhub.svg",alt:"stars"})))}u.isMDXComponent=!0}}]);