"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[5609],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>y});var r=t(7294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var f=r.createContext({}),l=function(n){var e=r.useContext(f),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},c=function(n){var e=l(n.components);return r.createElement(f.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,f=n.parentName,c=u(n,["components","mdxType","originalType","parentName"]),s=l(t),y=i,m=s["".concat(f,".").concat(y)]||s[y]||p[y]||o;return t?r.createElement(m,a(a({ref:e},c),{},{components:t})):r.createElement(m,a({ref:e},c))}));function y(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,a=new Array(o);a[0]=s;var u={};for(var f in e)hasOwnProperty.call(e,f)&&(u[f]=e[f]);u.originalType=n,u.mdxType="string"==typeof n?n:i,a[1]=u;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},444:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>f,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const o={},a="mitmproxy",u={unversionedId:"mitmproxy",id:"mitmproxy",title:"mitmproxy",description:"install",source:"@site/notes/python/mitmproxy.md",sourceDirName:".",slug:"/mitmproxy",permalink:"/notes/python/mitmproxy",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"jupyter",permalink:"/notes/python/jupyter"},next:{title:"mongo",permalink:"/notes/python/mongo"}},f={},l=[{value:"install",id:"install",level:2},{value:"API",id:"api",level:2},{value:"example.py",id:"examplepy",level:2}],c={toc:l};function p(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mitmproxy"},"mitmproxy"),(0,i.kt)("h2",{id:"install"},"install"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pip install mitmproxy\n\n# Mac\nopen ~/.mitmproxy/\n\u5b89\u88c5 mitmproxy-ca.pem\n\u8bbe\u7f6e\u4fe1\u4efb\u8be5\u8bc1\u4e66\n\n# open mitm.it after set proxy\nmitmproxy --http2 --listen-host 0.0.0.0 --listen-port 8888 -s mitm_test.py\n")),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# http.HTTPFlow \u5b9e\u4f8b flow\nflow.request.headers #\u83b7\u53d6\u6240\u6709\u5934\u4fe1\u606f\uff0c\u5305\u542bHost\u3001User-Agent\u3001Content-type\u7b49\u5b57\u6bb5\nflow.request.url #\u5b8c\u6574\u7684\u8bf7\u6c42\u5730\u5740\uff0c\u5305\u542b\u57df\u540d\u53ca\u8bf7\u6c42\u53c2\u6570\uff0c\u4f46\u662f\u4e0d\u5305\u542b\u653e\u5728body\u91cc\u9762\u7684\u8bf7\u6c42\u53c2\u6570\nflow.request.pretty_url #\u540cflow.request.url\u76ee\u524d\u6ca1\u770b\u51fa\u4ec0\u4e48\u5dee\u522b\nflow.request.host #\u57df\u540d\nflow.request.method #\u8bf7\u6c42\u65b9\u5f0f\u3002POST\u3001GET\u7b49\nflow.request.scheme #\u4ec0\u4e48\u8bf7\u6c42 \uff0c\u5982https\nflow.request.path # \u8bf7\u6c42\u7684\u8def\u5f84\uff0curl\u9664\u57df\u540d\u4e4b\u5916\u7684\u5185\u5bb9\nflow.request.get_text() #\u8bf7\u6c42\u4e2dbody\u5185\u5bb9\uff0c\u6709\u4e00\u4e9bhttp\u4f1a\u628a\u8bf7\u6c42\u53c2\u6570\u653e\u5728body\u91cc\u9762\uff0c\u90a3\u4e48\u53ef\u901a\u8fc7\u6b64\u65b9\u6cd5\u83b7\u53d6\uff0c\u8fd4\u56de\u5b57\u5178\u7c7b\u578b\nflow.request.query #\u8fd4\u56deMultiDictView\u7c7b\u578b\u7684\u6570\u636e\uff0curl\u76f4\u63a5\u5e26\u7684\u952e\u503c\u53c2\u6570\nflow.request.get_content()#bytes,\u7ed3\u679c\u5982flow.request.get_text()\nflow.request.raw_content #bytes,\u7ed3\u679c\u5982flow.request.get_content()\nflow.request.urlencoded_form #MultiDictView\uff0ccontent-type\uff1aapplication/x-www-form-urlencoded\u65f6\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u4e0d\u5305\u542burl\u76f4\u63a5\u5e26\u7684\u952e\u503c\u53c2\u6570\nflow.request.multipart_form #MultiDictView\uff0ccontent-type\uff1amultipart/form-data\n\u65f6\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u4e0d\u5305\u542burl\u76f4\u63a5\u5e26\u7684\u952e\u503c\u53c2\u6570\n\n\u4ee5\u4e0a\u5747\u4e3a\u83b7\u53d6request\u4fe1\u606f\u7684\u4e00\u4e9b\u5e38\u7528\u65b9\u6cd5\uff0c\u5bf9\u4e8eresponse\uff0c\u540c\u7406\nflow.response.status_code #\u72b6\u6001\u7801\nflow.response.text#\u8fd4\u56de\u5185\u5bb9\uff0c\u5df2\u89e3\u7801\nflow.response.content #\u8fd4\u56de\u5185\u5bb9\uff0c\u4e8c\u8fdb\u5236\nflow.response.setText()#\u4fee\u6539\u8fd4\u56de\u5185\u5bb9\uff0c\u4e0d\u9700\u8981\u8f6c\u7801\n")),(0,i.kt)("h2",{id:"examplepy"},"example.py"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# example\ndef response(flow):\n    if "some url" in flow.request.url:\n        print("[*] Request: {}".format(flow.request.url))\n        print("[*] Response: {}".format(flow.response.text))\n')),(0,i.kt)("h1",{id:"charles"},"charles"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "bytes"\n    "encoding/binary"\n    "fmt"\n    "math/rand"\n    "time"\n)\n\nconst (\n    rounds    = 12\n    roundKeys = 2 * (rounds + 1)\n)\n\nfunc main() {\n    rand.Seed(time.Now().UnixNano())\n\n    name := "mac"\n\n    fmt.Println("name:", name, "    key:", crack(name))\n}\n\nfunc crack(text string) string {\n\n    name := []byte(text)\n    length := len(name) + 4\n    padded := ((-length) & (8 - 1)) + length\n    bs := make([]byte, 4)\n    binary.BigEndian.PutUint32(bs, uint32(len(name)))\n    buff := bytes.Buffer{}\n    buff.Write(bs)\n    buff.Write(name)\n\n    var ckName int64 = 0x7a21c951691cd470\n    var ckKey int64 = -5408575981733630035\n    ck := newCkCipher(ckName)\n    outBuff := bytes.Buffer{}\n\n    for i := 0; i < padded; i += 8 {\n        bf := buff.Bytes()[i : i+8]\n        buf := bytes.NewBuffer(bf)\n        var nowVar int64\n        if err := binary.Read(buf, binary.BigEndian, &nowVar); err != nil {\n            panic(err)\n        }\n\n        dd := ck.encrypt(nowVar)\n\n        outBuff.WriteByte(byte(dd >> 56))\n        outBuff.WriteByte(byte(dd >> 48))\n        outBuff.WriteByte(byte(dd >> 40))\n        outBuff.WriteByte(byte(dd >> 32))\n        outBuff.WriteByte(byte(dd >> 24))\n        outBuff.WriteByte(byte(dd >> 16))\n        outBuff.WriteByte(byte(dd >> 8))\n        outBuff.WriteByte(byte(dd))\n\n    }\n    var n int32\n    for _, b := range outBuff.Bytes() {\n        n = rotateLeft(n^int32(int8(b)), 0x3)\n    }\n    prefix := n ^ 0x54882f8a\n    suffix := rand.Int31()\n    in := int64(prefix) << 32\n    s := int64(suffix)\n    switch suffix >> 16 {\n    case 0x0401:\n    case 0x0402:\n    case 0x0403:\n        in |= s\n        break\n    default:\n        in |= 0x01000000 | (s & 0xffffff)\n        break\n    }\n\n    out := newCkCipher(ckKey).decrypt(in)\n\n    var n2 int64\n    for i := 56; i >= 0; i -= 8 {\n        n2 ^= int64((uint64(in) >> i) & 0xff)\n    }\n\n    vv := int32(n2 & 0xff)\n    if vv < 0 {\n        vv = -vv\n    }\n    return fmt.Sprintf("%02x%016x", vv, uint64(out))\n}\n\ntype ckCipher struct {\n    rk [roundKeys]int32\n}\n\nfunc newCkCipher(ckKey int64) ckCipher {\n    ck := ckCipher{}\n\n    var ld [2]int32\n    ld[0] = int32(ckKey)\n    ld[1] = int32(uint64(ckKey) >> 32)\n\n    ck.rk[0] = -1209970333\n    for i := 1; i < roundKeys; i++ {\n        ck.rk[i] = ck.rk[i-1] + -1640531527\n    }\n    var a, b int32\n    var i, j int\n\n    for k := 0; k < 3*roundKeys; k++ {\n        ck.rk[i] = rotateLeft(ck.rk[i]+(a+b), 3)\n        a = ck.rk[i]\n        ld[j] = rotateLeft(ld[j]+(a+b), a+b)\n        b = ld[j]\n        i = (i + 1) % roundKeys\n        j = (j + 1) % 2\n    }\n    return ck\n}\n\nfunc (ck ckCipher) encrypt(in int64) int64 {\n    a := int32(in) + ck.rk[0]\n    b := int32(uint64(in)>>32) + ck.rk[1]\n    for r := 1; r <= rounds; r++ {\n        a = rotateLeft(a^b, b) + ck.rk[2*r]\n        b = rotateLeft(b^a, a) + ck.rk[2*r+1]\n    }\n    return pkLong(a, b)\n}\n\nfunc (ck ckCipher) decrypt(in int64) int64 {\n    a := int32(in)\n    b := int32(uint64(in) >> 32)\n    for i := rounds; i > 0; i-- {\n        b = rotateRight(b-ck.rk[2*i+1], a) ^ a\n        a = rotateRight(a-ck.rk[2*i], b) ^ b\n    }\n    b -= ck.rk[1]\n    a -= ck.rk[0]\n    return pkLong(a, b)\n}\n\nfunc rotateLeft(x int32, y int32) int32 {\n    return int32(x<<(y&(32-1))) | int32(uint32(x)>>(32-(y&(32-1))))\n}\n\nfunc rotateRight(x int32, y int32) int32 {\n    return int32(uint32(x)>>(y&(32-1))) | int32(x<<(32-(y&(32-1))))\n}\n\nfunc pkLong(a int32, b int32) int64 {\n    return (int64(a) & 0xffffffff) | (int64(b) << 32)\n}\n')))}p.isMDXComponent=!0}}]);