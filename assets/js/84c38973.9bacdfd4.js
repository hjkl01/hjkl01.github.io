"use strict";(self.webpackChunknotes_3_5_2=self.webpackChunknotes_3_5_2||[]).push([[3346],{1799:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var r=i(4848),t=i(8453);const o={},s="opencv",c={id:"opencv",title:"opencv",description:"\u66ff\u6362\u89c6\u9891\u80cc\u666f",source:"@site/notes/python/opencv.md",sourceDirName:".",slug:"/opencv",permalink:"/notes/python/opencv",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ocr",permalink:"/notes/python/ocr"},next:{title:"selenium",permalink:"/notes/python/selenium"}},p={},m=[{value:"\u66ff\u6362\u89c6\u9891\u80cc\u666f",id:"\u66ff\u6362\u89c6\u9891\u80cc\u666f",level:2}];function a(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"opencv",children:"opencv"})}),"\n",(0,r.jsx)(e.h2,{id:"\u66ff\u6362\u89c6\u9891\u80cc\u666f",children:"\u66ff\u6362\u89c6\u9891\u80cc\u666f"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"import os\nimport sys\nfrom datetime import datetime\nfrom itertools import cycle, islice\n\nimport cv2\nimport numpy as np\n\n\ndef addimage(origin_pic, background_pic):\n    # \u7167\u7247\u8bfb\u53d6\n    # img1 = cv2.imread(\"./1-0002.png\")\n    img1 = cv2.imread(origin_pic)\n    print(origin_pic, img1.shape)\n    height, width, channels = img1.shape\n\n    img2 = cv2.imread(background_pic)\n    img2 = cv2.resize(img2, dsize=(width, height))\n    # \u5efa\u7acb\u7a97\u53e3\n    cv2.namedWindow(\"task\")\n\n    # \u8bbe\u7f6e\u989c\u8272\u63d0\u53d6\u9608\u503c\uff0c\u7eff\u8272\n    color_dist = {'green': {'Lower': np.array([26, 104, 85]), 'Upper': np.array([100, 255, 255])}}\n\n    # \u5c06RGB\u56fe\u7247\u8f6c\u6362\u4e3aHSV\u56fe\u50cf\n    hsv = cv2.cvtColor(img1, cv2.COLOR_RGB2HSV)\n    background_mask = cv2.inRange(hsv, color_dist['green']['Lower'], color_dist['green']['Upper'])\n\n    person_mask = ~background_mask\n\n    # \u5c06\u4eba\u50cf\u8fdb\u884cmask\u5904\u7406\uff0c\u5f97\u5230\u9700\u8981\u6dfb\u52a0\u7684\u80cc\u666f\n    scenic_img = cv2.bitwise_and(img2, img2, mask=background_mask)\n\n    # mask\u53ea\u67090\u548c1\uff0c\u5f97\u5230\u53bb\u9664\u7eff\u8272\u80cc\u666f\u540e\u7684\u4eba\u50cf\n    person_img = cv2.bitwise_and(img1, img1, mask=person_mask)\n\n    # result = cv2.add(scenic_img, person_img)\n\n    # \u901a\u8fc7\u8c03\u8282alpha\u5b9e\u73b0\u80cc\u666f\u900f\u660e\u5ea6\u7684\u8c03\u8282\n    alpha_img = cv2.addWeighted(scenic_img, 0.7, person_img, 1, 0)\n\n    # cv2.imshow('lena', alpha_img)\n    res_file = f'result/{origin_pic.split(\"/\")[-1]}'\n    print(res_file)\n    if not os.path.exists('result'):\n        os.system('mkdir result')\n    cv2.imwrite(res_file, alpha_img)\n\n\ndef pre_run():\n    temp_dirs = ['pictures', 'background', 'result']\n    for td in temp_dirs:\n        if os.path.exists(td):\n            cmd = f'rm -rf {td}/*.png'\n        else:\n            cmd = f'mkdir {td}'\n        os.system(cmd)\n\n\ndef main(origin_mp4, background_mp4):\n    now = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n    print(now)\n    # now = '20240907-134406'\n\n    pre_run()\n    cmds = [f'ffmpeg -i {origin_mp4} pictures/op_%04d.png',\n            f'ffmpeg -i {origin_mp4} -vn -ar 44100 -ab 128k -f mp3 output_{now}.mp3 -y',\n            # f'ffmpeg -i {origin_mp4} -f mp3 -vn temp.mp3',\n            f'ffmpeg -i {background_mp4} background/op_%04d.png',\n            ]\n    for cmd in cmds:\n        os.system(cmd)\n\n    origin_pics = os.listdir('pictures')\n    origin_pics.sort()\n    background_pics = os.listdir('background')\n    background_pics.sort()\n\n    bg_extended = list(islice(cycle(background_pics), len(origin_pics)))\n    # print('bg_extended: ', bg_extended)\n\n    for i in range(len(origin_pics)):\n        addimage(f'pictures/{origin_pics[i]}', f'background/{bg_extended[i]}')\n\n    cmds = [f'ffmpeg -framerate 30 -i result/op_%04d.png -c:v libx264 -r 30 temp_{now}.mp4 -y',\n            f'ffmpeg -i ./temp_{now}.mp4 -i ./output_{now}.mp3 -c copy -map 0:v:0 -map 1:a:0 -shortest output_{now}.mp4 -y']\n\n    for cmd in cmds:\n        os.system(cmd)\n\n\nif __name__ == \"__main__\":\n    args = sys.argv[:]\n    main(args[1], args[2])\n"})})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>c});var r=i(6540);const t={},o=r.createContext(t);function s(n){const e=r.useContext(o);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);